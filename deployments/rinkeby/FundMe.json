{
  "address": "0x0dcEc3d6c778049280E08A4AD26549C06EEDe644",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xfa0f6173eaa4278f784bba847fa3c02aae41ab5d85b289af885d7b20ed845dad",
  "receipt": {
    "to": null,
    "from": "0xf4A27cbAC86eB839aC11aa0F6E0Cff212f8665F5",
    "contractAddress": "0x0dcEc3d6c778049280E08A4AD26549C06EEDe644",
    "transactionIndex": 13,
    "gasUsed": "874943",
    "logsBloom": "0x
    "blockHash": "0xb362152ef06ad99f4860d8020448cfddbf844238cc1c7eabcbfe5a3606957fa7",
    "transactionHash": "0xfa0f6173eaa4278f784bba847fa3c02aae41ab5d85b289af885d7b20ed845dad",
    "logs": [],
    "blockNumber": 11255132,
    "cumulativeGasUsed": "3778060",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 2,
  "solcInputHash": "445c1cd56cd8e7904e0fc4deb920ecf1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\\\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback()\\n    //     /   \\\\\\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0xab93eb9906dbc3f5000fa190ea971e263f462f8fa64ba217c477d5eb0ebb2011\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // Rinkeby ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xc5c8ba8e83dad0db435ab022ceb177b2cb26e49ec91db0e8aa8dfdb459110f90\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405162000fda38038062000fda83398181016040528101906100349190610115565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610142565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e2826100b7565b9050919050565b6100f2816100d7565b81146100fd57600080fd5b50565b60008151905061010f816100e9565b92915050565b60006020828403121561012b5761012a6100b2565b5b600061013984828501610100565b91505092915050565b60805160601c610e7262000168600039600081816102d801526105630152610e726000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a146100ff578063b60d42881461012a578063dba6335f14610134578063dc0d3dff1461015f57610083565b80633ccfd60b1461008d5780633e47d6f3146100975780636b69a592146100d457610083565b366100835761008161019c565b005b61008b61019c565b005b6100956102d6565b005b3480156100a357600080fd5b506100be60048036038101906100b991906107aa565b610516565b6040516100cb91906107f0565b60405180910390f35b3480156100e057600080fd5b506100e961052e565b6040516100f691906107f0565b60405180910390f35b34801561010b57600080fd5b5061011461053b565b604051610121919061086a565b60405180910390f35b61013261019c565b005b34801561014057600080fd5b50610149610561565b6040516101569190610894565b60405180910390f35b34801561016b57600080fd5b50610186600480360381019061018191906108db565b610585565b6040516101939190610894565b60405180910390f35b6802b5e3af16b18800006101db600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c490919063ffffffff16565b101561021c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021390610965565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461026a91906109b4565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104065760006001828154811061038157610380610a0a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103fe90610a39565b91505061035e565b50600067ffffffffffffffff81111561042257610421610a82565b5b6040519080825280602002602001820160405280156104505781602001602082028036833780820191505090505b50600190805190602001906104669291906106a0565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048d90610ae2565b60006040518083038185875af1925050503d80600081146104ca576040519150601f19603f3d011682016040523d82523d6000602084013e6104cf565b606091505b5050905080610513576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050a90610b43565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061059557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d083610600565b90506000670de0b6b3a764000085836105e99190610b63565b6105f39190610bec565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064957600080fd5b505afa15801561065d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106819190610caa565b5050509150506402540be400816106989190610d25565b915050919050565b828054828255906000526020600020908101928215610719579160200282015b828111156107185782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c0565b5b509050610726919061072a565b5090565b5b8082111561074357600081600090555060010161072b565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107778261074c565b9050919050565b6107878161076c565b811461079257600080fd5b50565b6000813590506107a48161077e565b92915050565b6000602082840312156107c0576107bf610747565b5b60006107ce84828501610795565b91505092915050565b6000819050919050565b6107ea816107d7565b82525050565b600060208201905061080560008301846107e1565b92915050565b6000819050919050565b600061083061082b6108268461074c565b61080b565b61074c565b9050919050565b600061084282610815565b9050919050565b600061085482610837565b9050919050565b61086481610849565b82525050565b600060208201905061087f600083018461085b565b92915050565b61088e8161076c565b82525050565b60006020820190506108a96000830184610885565b92915050565b6108b8816107d7565b81146108c357600080fd5b50565b6000813590506108d5816108af565b92915050565b6000602082840312156108f1576108f0610747565b5b60006108ff848285016108c6565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b600061094f601b83610908565b915061095a82610919565b602082019050919050565b6000602082019050818103600083015261097e81610942565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109bf826107d7565b91506109ca836107d7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109ff576109fe610985565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a44826107d7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a7757610a76610985565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610acc600083610ab1565b9150610ad782610abc565b600082019050919050565b6000610aed82610abf565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b2d600b83610908565b9150610b3882610af7565b602082019050919050565b60006020820190508181036000830152610b5c81610b20565b9050919050565b6000610b6e826107d7565b9150610b79836107d7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bb257610bb1610985565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bf7826107d7565b9150610c02836107d7565b925082610c1257610c11610bbd565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c3c81610c1d565b8114610c4757600080fd5b50565b600081519050610c5981610c33565b92915050565b6000819050919050565b610c7281610c5f565b8114610c7d57600080fd5b50565b600081519050610c8f81610c69565b92915050565b600081519050610ca4816108af565b92915050565b600080600080600060a08688031215610cc657610cc5610747565b5b6000610cd488828901610c4a565b9550506020610ce588828901610c80565b9450506040610cf688828901610c95565b9350506060610d0788828901610c95565b9250506080610d1888828901610c4a565b9150509295509295909350565b6000610d3082610c5f565b9150610d3b83610c5f565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d7a57610d79610985565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610db757610db6610985565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610df457610df3610985565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e3157610e30610985565b5b82820290509291505056fea2646970667358221220ddcaa67a1534c6ab276540b9cdb528b22089f1dd360221b1ec33e4ab1b3ba10a64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a146100ff578063b60d42881461012a578063dba6335f14610134578063dc0d3dff1461015f57610083565b80633ccfd60b1461008d5780633e47d6f3146100975780636b69a592146100d457610083565b366100835761008161019c565b005b61008b61019c565b005b6100956102d6565b005b3480156100a357600080fd5b506100be60048036038101906100b991906107aa565b610516565b6040516100cb91906107f0565b60405180910390f35b3480156100e057600080fd5b506100e961052e565b6040516100f691906107f0565b60405180910390f35b34801561010b57600080fd5b5061011461053b565b604051610121919061086a565b60405180910390f35b61013261019c565b005b34801561014057600080fd5b50610149610561565b6040516101569190610894565b60405180910390f35b34801561016b57600080fd5b50610186600480360381019061018191906108db565b610585565b6040516101939190610894565b60405180910390f35b6802b5e3af16b18800006101db600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c490919063ffffffff16565b101561021c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021390610965565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461026a91906109b4565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104065760006001828154811061038157610380610a0a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103fe90610a39565b91505061035e565b50600067ffffffffffffffff81111561042257610421610a82565b5b6040519080825280602002602001820160405280156104505781602001602082028036833780820191505090505b50600190805190602001906104669291906106a0565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048d90610ae2565b60006040518083038185875af1925050503d80600081146104ca576040519150601f19603f3d011682016040523d82523d6000602084013e6104cf565b606091505b5050905080610513576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050a90610b43565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061059557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d083610600565b90506000670de0b6b3a764000085836105e99190610b63565b6105f39190610bec565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064957600080fd5b505afa15801561065d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106819190610caa565b5050509150506402540be400816106989190610d25565b915050919050565b828054828255906000526020600020908101928215610719579160200282015b828111156107185782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c0565b5b509050610726919061072a565b5090565b5b8082111561074357600081600090555060010161072b565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107778261074c565b9050919050565b6107878161076c565b811461079257600080fd5b50565b6000813590506107a48161077e565b92915050565b6000602082840312156107c0576107bf610747565b5b60006107ce84828501610795565b91505092915050565b6000819050919050565b6107ea816107d7565b82525050565b600060208201905061080560008301846107e1565b92915050565b6000819050919050565b600061083061082b6108268461074c565b61080b565b61074c565b9050919050565b600061084282610815565b9050919050565b600061085482610837565b9050919050565b61086481610849565b82525050565b600060208201905061087f600083018461085b565b92915050565b61088e8161076c565b82525050565b60006020820190506108a96000830184610885565b92915050565b6108b8816107d7565b81146108c357600080fd5b50565b6000813590506108d5816108af565b92915050565b6000602082840312156108f1576108f0610747565b5b60006108ff848285016108c6565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b600061094f601b83610908565b915061095a82610919565b602082019050919050565b6000602082019050818103600083015261097e81610942565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109bf826107d7565b91506109ca836107d7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109ff576109fe610985565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a44826107d7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a7757610a76610985565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610acc600083610ab1565b9150610ad782610abc565b600082019050919050565b6000610aed82610abf565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b2d600b83610908565b9150610b3882610af7565b602082019050919050565b60006020820190508181036000830152610b5c81610b20565b9050919050565b6000610b6e826107d7565b9150610b79836107d7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bb257610bb1610985565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bf7826107d7565b9150610c02836107d7565b925082610c1257610c11610bbd565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c3c81610c1d565b8114610c4757600080fd5b50565b600081519050610c5981610c33565b92915050565b6000819050919050565b610c7281610c5f565b8114610c7d57600080fd5b50565b600081519050610c8f81610c69565b92915050565b600081519050610ca4816108af565b92915050565b600080600080600060a08688031215610cc657610cc5610747565b5b6000610cd488828901610c4a565b9550506020610ce588828901610c80565b9450506040610cf688828901610c95565b9350506060610d0788828901610c95565b9250506080610d1888828901610c4a565b9150509295509295909350565b6000610d3082610c5f565b9150610d3b83610c5f565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d7a57610d79610985565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610db757610db6610985565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610df457610df3610985565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e3157610e30610985565b5b82820290509291505056fea2646970667358221220ddcaa67a1534c6ab276540b9cdb528b22089f1dd360221b1ec33e4ab1b3ba10a64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}